{"ast":null,"code":"var _jsxFileName = \"E:\\\\masaustu\\\\golazo\\\\src\\\\components\\\\TeamLogo.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { storage } from '../firebase';\nimport { ref, getDownloadURL } from 'firebase/storage';\nimport { useEffect, useState } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TeamLogo = ({\n  team,\n  className,\n  fallback\n}) => {\n  _s();\n  const [logoUrl, setLogoUrl] = useState(null);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchLogo = async () => {\n      try {\n        const storageRef = ref(storage, `team-logos/${team}`);\n        const url = await getDownloadURL(storageRef);\n\n        // Emülatör URL'sini düzelt\n        if (process.env.NODE_ENV === 'development') {\n          // localhost:9199'u kullan\n          const emulatorUrl = url.replace('firebasestorage.googleapis.com', 'localhost:9199');\n          setLogoUrl(emulatorUrl);\n        } else {\n          setLogoUrl(url);\n        }\n        setError(false);\n      } catch (err) {\n        console.error('Logo yüklenirken hata:', err);\n        setError(true);\n      }\n    };\n    if (team) {\n      fetchLogo();\n    }\n  }, [team]);\n  if (error || !logoUrl) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: fallback\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: logoUrl,\n    alt: `${team} logo`,\n    className: className,\n    onError: () => setError(true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(TeamLogo, \"ATfiy7QV2/W6DUS+dJPpc5o2WzI=\");\n_c = TeamLogo;\nexport default TeamLogo;\nvar _c;\n$RefreshReg$(_c, \"TeamLogo\");","map":{"version":3,"names":["React","storage","ref","getDownloadURL","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","TeamLogo","team","className","fallback","_s","logoUrl","setLogoUrl","error","setError","fetchLogo","storageRef","url","process","env","NODE_ENV","emulatorUrl","replace","err","console","children","src","alt","onError","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/masaustu/golazo/src/components/TeamLogo.tsx"],"sourcesContent":["import React from 'react';\r\nimport { storage } from '../firebase';\r\nimport { ref, getDownloadURL } from 'firebase/storage';\r\nimport { useEffect, useState } from 'react';\r\n\r\ninterface TeamLogoProps {\r\n  team: string;\r\n  className?: string;\r\n  fallback?: React.ReactNode;\r\n}\r\n\r\nconst TeamLogo: React.FC<TeamLogoProps> = ({ team, className, fallback }) => {\r\n  const [logoUrl, setLogoUrl] = useState<string | null>(null);\r\n  const [error, setError] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchLogo = async () => {\r\n      try {\r\n        const storageRef = ref(storage, `team-logos/${team}`);\r\n        const url = await getDownloadURL(storageRef);\r\n        \r\n        // Emülatör URL'sini düzelt\r\n        if (process.env.NODE_ENV === 'development') {\r\n          // localhost:9199'u kullan\r\n          const emulatorUrl = url.replace(\r\n            'firebasestorage.googleapis.com',\r\n            'localhost:9199'\r\n          );\r\n          setLogoUrl(emulatorUrl);\r\n        } else {\r\n          setLogoUrl(url);\r\n        }\r\n        \r\n        setError(false);\r\n      } catch (err) {\r\n        console.error('Logo yüklenirken hata:', err);\r\n        setError(true);\r\n      }\r\n    };\r\n\r\n    if (team) {\r\n      fetchLogo();\r\n    }\r\n  }, [team]);\r\n\r\n  if (error || !logoUrl) {\r\n    return <>{fallback}</>;\r\n  }\r\n\r\n  return (\r\n    <img \r\n      src={logoUrl} \r\n      alt={`${team} logo`} \r\n      className={className}\r\n      onError={() => setError(true)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default TeamLogo; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,GAAG,EAAEC,cAAc,QAAQ,kBAAkB;AACtD,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAQ5C,MAAMC,QAAiC,GAAGA,CAAC;EAAEC,IAAI;EAAEC,SAAS;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3E,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAgB,IAAI,CAAC;EAC3D,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEzCD,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,UAAU,GAAGlB,GAAG,CAACD,OAAO,EAAE,cAAcU,IAAI,EAAE,CAAC;QACrD,MAAMU,GAAG,GAAG,MAAMlB,cAAc,CAACiB,UAAU,CAAC;;QAE5C;QACA,IAAIE,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,EAAE;UAC1C;UACA,MAAMC,WAAW,GAAGJ,GAAG,CAACK,OAAO,CAC7B,gCAAgC,EAChC,gBACF,CAAC;UACDV,UAAU,CAACS,WAAW,CAAC;QACzB,CAAC,MAAM;UACLT,UAAU,CAACK,GAAG,CAAC;QACjB;QAEAH,QAAQ,CAAC,KAAK,CAAC;MACjB,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZC,OAAO,CAACX,KAAK,CAAC,wBAAwB,EAAEU,GAAG,CAAC;QAC5CT,QAAQ,CAAC,IAAI,CAAC;MAChB;IACF,CAAC;IAED,IAAIP,IAAI,EAAE;MACRQ,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAACR,IAAI,CAAC,CAAC;EAEV,IAAIM,KAAK,IAAI,CAACF,OAAO,EAAE;IACrB,oBAAON,OAAA,CAAAF,SAAA;MAAAsB,QAAA,EAAGhB;IAAQ,gBAAG,CAAC;EACxB;EAEA,oBACEJ,OAAA;IACEqB,GAAG,EAAEf,OAAQ;IACbgB,GAAG,EAAE,GAAGpB,IAAI,OAAQ;IACpBC,SAAS,EAAEA,SAAU;IACrBoB,OAAO,EAAEA,CAAA,KAAMd,QAAQ,CAAC,IAAI;EAAE;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEN,CAAC;AAACtB,EAAA,CA9CIJ,QAAiC;AAAA2B,EAAA,GAAjC3B,QAAiC;AAgDvC,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}