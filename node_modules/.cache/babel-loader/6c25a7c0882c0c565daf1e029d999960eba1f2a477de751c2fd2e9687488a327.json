{"ast":null,"code":"var _jsxFileName = \"E:\\\\masaustu\\\\golazo\\\\src\\\\pages\\\\DailyMatches.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport DateSelector from '../components/DateSelector';\nimport MatchCard from '../components/MatchCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FAVORITE_LEAGUES = ['LaLiga', 'Premier League', 'Süper Lig', 'Serie A', 'Bundesliga', 'Ligue 1'];\n\n// Öncelikli ligler - Türkiye en başta\nconst PRIORITY_LEAGUES = ['Turkey - Süper Lig', 'Europe - UEFA Champions League', 'Europe - UEFA Europa League', 'Europe - UEFA Europa Conference League', 'England - Premier League', 'Italy - Serie A', 'Spain - LaLiga', 'Germany - Bundesliga', 'France - Ligue 1', 'Netherlands - Eredivisie', 'Portugal - Primeira Liga', 'Belgium - Pro League'];\n\n// Lig öncelik sıralaması - Türkiye en başta\nconst LEAGUE_PRIORITY = {\n  'Süper Lig': 1,\n  'UEFA Champions League': 2,\n  'UEFA Europa League': 3,\n  'UEFA Europa Conference League': 4,\n  'Premier League': 5,\n  'Serie A': 6,\n  'LaLiga': 7,\n  'Bundesliga': 8,\n  'Ligue 1': 9,\n  'Eredivisie': 10,\n  'Primeira Liga': 11,\n  'Pro League': 12\n};\nconst groupAndSortMatches = matches => {\n  // Önce tüm maçları grupla\n  const groups = matches.reduce((groups, match) => {\n    var _match$tournament$cat, _match$tournament$uni;\n    const country = ((_match$tournament$cat = match.tournament.category) === null || _match$tournament$cat === void 0 ? void 0 : _match$tournament$cat.name) || '';\n    const league = ((_match$tournament$uni = match.tournament.uniqueTournament) === null || _match$tournament$uni === void 0 ? void 0 : _match$tournament$uni.name) || match.tournament.name;\n    const fullKey = `${country} - ${league}`;\n    if (!groups[fullKey]) {\n      groups[fullKey] = [];\n    }\n    groups[fullKey].push(match);\n    return groups;\n  }, {});\n\n  // Türkiye liglerini ayrı grupla\n  const turkishLeagues = {};\n  const otherLeagues = {};\n  Object.entries(groups).forEach(([key, matches]) => {\n    if (key.startsWith('Turkey')) {\n      turkishLeagues[key] = matches;\n    } else {\n      otherLeagues[key] = matches;\n    }\n  });\n\n  // Türkiye liglerini sırala\n  const sortedTurkishLeagues = Object.entries(turkishLeagues).sort(([a], [b]) => {\n    if (a.includes('Süper Lig')) return -1;\n    if (b.includes('Süper Lig')) return 1;\n    return a.localeCompare(b);\n  });\n\n  // Diğer ligleri sırala\n  const sortedOtherLeagues = Object.entries(otherLeagues).sort(([a], [b]) => {\n    const isAEuropean = a.includes('Champions League') || a.includes('Europa League') || a.includes('Conference League');\n    const isBEuropean = b.includes('Champions League') || b.includes('Europa League') || b.includes('Conference League');\n    if (isAEuropean && !isBEuropean) return -1;\n    if (!isAEuropean && isBEuropean) return 1;\n    if (isAEuropean && isBEuropean) {\n      if (a.includes('Champions League')) return -1;\n      if (b.includes('Champions League')) return 1;\n      if (a.includes('Europa League')) return -1;\n      if (b.includes('Europa League')) return 1;\n    }\n    return a.localeCompare(b);\n  });\n  return {\n    turkishLeagues: sortedTurkishLeagues,\n    otherLeagues: sortedOtherLeagues\n  };\n};\nconst DailyMatches = () => {\n  _s();\n  const [matches, setMatches] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  const [favoriteMatches, setFavoriteMatches] = useState(() => {\n    const saved = localStorage.getItem('favoriteMatches');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // Sadece Süper Lig açık gelsin\n  const [expandedLeagues, setExpandedLeagues] = useState(['Turkey - Süper Lig', 'Europe - UEFA Champions League', 'Europe - UEFA Europa League', 'Europe - UEFA Europa Conference League']);\n  const {\n    turkishLeagues,\n    otherLeagues\n  } = groupAndSortMatches(matches);\n  useEffect(() => {\n    fetchMatches();\n  }, [selectedDate]);\n  const fetchMatches = async () => {\n    try {\n      setLoading(true);\n      const formattedDate = selectedDate.toISOString().split('T')[0];\n      const response = await fetch(`https://www.sofascore.com/api/v1/sport/football/scheduled-events/${formattedDate}`);\n      const data = await response.json();\n\n      // Seçili tarihe ait maçları filtrele\n      const matchesForDate = data.events.filter(match => {\n        const matchDate = new Date(match.startTimestamp * 1000).toISOString().split('T')[0];\n        return matchDate === formattedDate;\n      });\n\n      // Maçları saate göre sırala\n      const sortedMatches = matchesForDate.sort((a, b) => a.startTimestamp - b.startTimestamp);\n      setMatches(sortedMatches);\n    } catch (error) {\n      console.error('Maçlar yüklenirken hata:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const toggleFavorite = matchId => {\n    setFavoriteMatches(prev => {\n      const newFavorites = prev.includes(matchId) ? prev.filter(id => id !== matchId) : [...prev, matchId];\n      localStorage.setItem('favoriteMatches', JSON.stringify(newFavorites));\n      return newFavorites;\n    });\n  };\n  const toggleLeagueExpand = leagueName => {\n    setExpandedLeagues(prev => prev.includes(leagueName) ? prev.filter(name => name !== leagueName) : [...prev, leagueName]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-900\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl mx-auto p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-2xl font-bold text-white\",\n          children: \"G\\xFCnl\\xFCk Ma\\xE7lar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DateSelector, {\n          selectedDate: selectedDate,\n          onChange: setSelectedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-400 py-8\",\n        children: \"Y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-6\",\n        children: [favoriteMatches.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800/50 rounded-lg overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 px-4 py-2\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold text-white\",\n              children: \"Favori Ma\\xE7lar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divide-y divide-gray-700\",\n            children: matches.filter(match => favoriteMatches.includes(match.id)).map(match => /*#__PURE__*/_jsxDEV(MatchCard, {\n              match: match,\n              onClick: () => {},\n              onToggleFavorite: toggleFavorite,\n              isFavorite: true\n            }, match.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this), turkishLeagues.map(([leagueName, leagueMatches]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800/50 rounded-lg overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 px-4 py-2 flex items-center justify-between cursor-pointer hover:bg-gray-700\",\n            onClick: () => toggleLeagueExpand(leagueName),\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-lg font-semibold text-white\",\n              children: leagueName.split(' - ')[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400\",\n              children: expandedLeagues.includes(leagueName) ? '▼' : '▶'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 17\n          }, this), expandedLeagues.includes(leagueName) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divide-y divide-gray-700\",\n            children: leagueMatches.map(match => /*#__PURE__*/_jsxDEV(MatchCard, {\n              match: match,\n              onClick: () => {},\n              onToggleFavorite: toggleFavorite,\n              isFavorite: favoriteMatches.includes(match.id)\n            }, match.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 19\n          }, this)]\n        }, leagueName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this)), otherLeagues.map(([leagueName, leagueMatches]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-800/50 rounded-lg overflow-hidden\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gray-800 px-4 py-2 flex items-center justify-between cursor-pointer hover:bg-gray-700\",\n            onClick: () => toggleLeagueExpand(leagueName),\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-lg font-semibold text-white\",\n              children: leagueName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-gray-400\",\n              children: expandedLeagues.includes(leagueName) ? '▼' : '▶'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this), expandedLeagues.includes(leagueName) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divide-y divide-gray-700\",\n            children: leagueMatches.map(match => /*#__PURE__*/_jsxDEV(MatchCard, {\n              match: match,\n              onClick: () => {},\n              onToggleFavorite: toggleFavorite,\n              isFavorite: favoriteMatches.includes(match.id)\n            }, match.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 19\n          }, this)]\n        }, leagueName, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 5\n  }, this);\n};\n_s(DailyMatches, \"3W9o9b85yhV9O5LOleL2/UFzns0=\");\n_c = DailyMatches;\nexport default DailyMatches;\nvar _c;\n$RefreshReg$(_c, \"DailyMatches\");","map":{"version":3,"names":["React","useState","useEffect","DateSelector","MatchCard","jsxDEV","_jsxDEV","FAVORITE_LEAGUES","PRIORITY_LEAGUES","LEAGUE_PRIORITY","groupAndSortMatches","matches","groups","reduce","match","_match$tournament$cat","_match$tournament$uni","country","tournament","category","name","league","uniqueTournament","fullKey","push","turkishLeagues","otherLeagues","Object","entries","forEach","key","startsWith","sortedTurkishLeagues","sort","a","b","includes","localeCompare","sortedOtherLeagues","isAEuropean","isBEuropean","DailyMatches","_s","setMatches","loading","setLoading","selectedDate","setSelectedDate","Date","favoriteMatches","setFavoriteMatches","saved","localStorage","getItem","JSON","parse","expandedLeagues","setExpandedLeagues","fetchMatches","formattedDate","toISOString","split","response","fetch","data","json","matchesForDate","events","filter","matchDate","startTimestamp","sortedMatches","error","console","toggleFavorite","matchId","prev","newFavorites","id","setItem","stringify","toggleLeagueExpand","leagueName","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","length","map","onClick","onToggleFavorite","isFavorite","leagueMatches","_c","$RefreshReg$"],"sources":["E:/masaustu/golazo/src/pages/DailyMatches.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport TeamLogo from '../components/TeamLogo';\r\nimport DateSelector from '../components/DateSelector';\r\nimport MatchCard from '../components/MatchCard';\r\n\r\ninterface Match {\r\n  id: string;\r\n  homeTeam: {\r\n    id: string;\r\n    name: string;\r\n    shortName: string;\r\n  };\r\n  awayTeam: {\r\n    id: string;\r\n    name: string;\r\n    shortName: string;\r\n  };\r\n  tournament: {\r\n    name: string;\r\n    category: {\r\n      name: string;\r\n      flag?: string;\r\n    };\r\n    uniqueTournament: {\r\n      name: string;\r\n      id: number;\r\n    };\r\n  };\r\n  status: {\r\n    type: string;\r\n    description: string;\r\n  };\r\n  startTimestamp: number;\r\n  homeScore?: {\r\n    current: number;\r\n  };\r\n  awayScore?: {\r\n    current: number;\r\n  };\r\n}\r\n\r\nconst FAVORITE_LEAGUES = [\r\n  'LaLiga',\r\n  'Premier League',\r\n  'Süper Lig',\r\n  'Serie A',\r\n  'Bundesliga',\r\n  'Ligue 1'\r\n];\r\n\r\n// Öncelikli ligler - Türkiye en başta\r\nconst PRIORITY_LEAGUES = [\r\n  'Turkey - Süper Lig',\r\n  'Europe - UEFA Champions League',\r\n  'Europe - UEFA Europa League',\r\n  'Europe - UEFA Europa Conference League',\r\n  'England - Premier League',\r\n  'Italy - Serie A',\r\n  'Spain - LaLiga',\r\n  'Germany - Bundesliga',\r\n  'France - Ligue 1',\r\n  'Netherlands - Eredivisie',\r\n  'Portugal - Primeira Liga',\r\n  'Belgium - Pro League'\r\n];\r\n\r\n// Lig öncelik sıralaması - Türkiye en başta\r\nconst LEAGUE_PRIORITY: { [key: string]: number } = {\r\n  'Süper Lig': 1,\r\n  'UEFA Champions League': 2,\r\n  'UEFA Europa League': 3,\r\n  'UEFA Europa Conference League': 4,\r\n  'Premier League': 5,\r\n  'Serie A': 6,\r\n  'LaLiga': 7,\r\n  'Bundesliga': 8,\r\n  'Ligue 1': 9,\r\n  'Eredivisie': 10,\r\n  'Primeira Liga': 11,\r\n  'Pro League': 12\r\n};\r\n\r\nconst groupAndSortMatches = (matches: Match[]) => {\r\n  // Önce tüm maçları grupla\r\n  const groups = matches.reduce((groups: {[key: string]: Match[]}, match) => {\r\n    const country = match.tournament.category?.name || '';\r\n    const league = match.tournament.uniqueTournament?.name || match.tournament.name;\r\n    const fullKey = `${country} - ${league}`;\r\n\r\n    if (!groups[fullKey]) {\r\n      groups[fullKey] = [];\r\n    }\r\n    groups[fullKey].push(match);\r\n    return groups;\r\n  }, {});\r\n\r\n  // Türkiye liglerini ayrı grupla\r\n  const turkishLeagues: {[key: string]: Match[]} = {};\r\n  const otherLeagues: {[key: string]: Match[]} = {};\r\n\r\n  Object.entries(groups).forEach(([key, matches]) => {\r\n    if (key.startsWith('Turkey')) {\r\n      turkishLeagues[key] = matches;\r\n    } else {\r\n      otherLeagues[key] = matches;\r\n    }\r\n  });\r\n\r\n  // Türkiye liglerini sırala\r\n  const sortedTurkishLeagues = Object.entries(turkishLeagues).sort(([a], [b]) => {\r\n    if (a.includes('Süper Lig')) return -1;\r\n    if (b.includes('Süper Lig')) return 1;\r\n    return a.localeCompare(b);\r\n  });\r\n\r\n  // Diğer ligleri sırala\r\n  const sortedOtherLeagues = Object.entries(otherLeagues).sort(([a], [b]) => {\r\n    const isAEuropean = a.includes('Champions League') || a.includes('Europa League') || a.includes('Conference League');\r\n    const isBEuropean = b.includes('Champions League') || b.includes('Europa League') || b.includes('Conference League');\r\n\r\n    if (isAEuropean && !isBEuropean) return -1;\r\n    if (!isAEuropean && isBEuropean) return 1;\r\n\r\n    if (isAEuropean && isBEuropean) {\r\n      if (a.includes('Champions League')) return -1;\r\n      if (b.includes('Champions League')) return 1;\r\n      if (a.includes('Europa League')) return -1;\r\n      if (b.includes('Europa League')) return 1;\r\n    }\r\n\r\n    return a.localeCompare(b);\r\n  });\r\n\r\n  return { turkishLeagues: sortedTurkishLeagues, otherLeagues: sortedOtherLeagues };\r\n};\r\n\r\nconst DailyMatches: React.FC = () => {\r\n  const [matches, setMatches] = useState<Match[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n  const [favoriteMatches, setFavoriteMatches] = useState<string[]>(() => {\r\n    const saved = localStorage.getItem('favoriteMatches');\r\n    return saved ? JSON.parse(saved) : [];\r\n  });\r\n\r\n  // Sadece Süper Lig açık gelsin\r\n  const [expandedLeagues, setExpandedLeagues] = useState<string[]>([\r\n    'Turkey - Süper Lig',\r\n    'Europe - UEFA Champions League',\r\n    'Europe - UEFA Europa League',\r\n    'Europe - UEFA Europa Conference League'\r\n  ]);\r\n  const { turkishLeagues, otherLeagues } = groupAndSortMatches(matches);\r\n\r\n  useEffect(() => {\r\n    fetchMatches();\r\n  }, [selectedDate]);\r\n\r\n  const fetchMatches = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const formattedDate = selectedDate.toISOString().split('T')[0];\r\n      const response = await fetch(`https://www.sofascore.com/api/v1/sport/football/scheduled-events/${formattedDate}`);\r\n      const data = await response.json();\r\n      \r\n      // Seçili tarihe ait maçları filtrele\r\n      const matchesForDate = data.events.filter((match: Match) => {\r\n        const matchDate = new Date(match.startTimestamp * 1000).toISOString().split('T')[0];\r\n        return matchDate === formattedDate;\r\n      });\r\n\r\n      // Maçları saate göre sırala\r\n      const sortedMatches = matchesForDate.sort((a: Match, b: Match) => \r\n        a.startTimestamp - b.startTimestamp\r\n      );\r\n\r\n      setMatches(sortedMatches);\r\n    } catch (error) {\r\n      console.error('Maçlar yüklenirken hata:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const toggleFavorite = (matchId: string) => {\r\n    setFavoriteMatches(prev => {\r\n      const newFavorites = prev.includes(matchId)\r\n        ? prev.filter(id => id !== matchId)\r\n        : [...prev, matchId];\r\n      \r\n      localStorage.setItem('favoriteMatches', JSON.stringify(newFavorites));\r\n      return newFavorites;\r\n    });\r\n  };\r\n\r\n  const toggleLeagueExpand = (leagueName: string) => {\r\n    setExpandedLeagues(prev => \r\n      prev.includes(leagueName) \r\n        ? prev.filter(name => name !== leagueName)\r\n        : [...prev, leagueName]\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-900\">\r\n      <div className=\"max-w-6xl mx-auto p-4\">\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h1 className=\"text-2xl font-bold text-white\">Günlük Maçlar</h1>\r\n          <DateSelector \r\n            selectedDate={selectedDate}\r\n            onChange={setSelectedDate}\r\n          />\r\n        </div>\r\n\r\n        {loading ? (\r\n          <div className=\"text-center text-gray-400 py-8\">Yükleniyor...</div>\r\n        ) : (\r\n          <div className=\"space-y-6\">\r\n            {/* Favori Maçlar */}\r\n            {favoriteMatches.length > 0 && (\r\n              <div className=\"bg-gray-800/50 rounded-lg overflow-hidden\">\r\n                <div className=\"bg-gray-800 px-4 py-2\">\r\n                  <h2 className=\"text-lg font-semibold text-white\">Favori Maçlar</h2>\r\n                </div>\r\n                <div className=\"divide-y divide-gray-700\">\r\n                  {matches\r\n                    .filter(match => favoriteMatches.includes(match.id))\r\n                    .map(match => (\r\n                      <MatchCard\r\n                        key={match.id}\r\n                        match={match}\r\n                        onClick={() => {}}\r\n                        onToggleFavorite={toggleFavorite}\r\n                        isFavorite={true}\r\n                      />\r\n                    ))}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Türkiye Ligleri */}\r\n            {turkishLeagues.map(([leagueName, leagueMatches]) => (\r\n              <div key={leagueName} className=\"bg-gray-800/50 rounded-lg overflow-hidden\">\r\n                <div \r\n                  className=\"bg-gray-800 px-4 py-2 flex items-center justify-between cursor-pointer hover:bg-gray-700\"\r\n                  onClick={() => toggleLeagueExpand(leagueName)}\r\n                >\r\n                  <h3 className=\"text-lg font-semibold text-white\">\r\n                    {leagueName.split(' - ')[1]}\r\n                  </h3>\r\n                  <span className=\"text-gray-400\">\r\n                    {expandedLeagues.includes(leagueName) ? '▼' : '▶'}\r\n                  </span>\r\n                </div>\r\n                {expandedLeagues.includes(leagueName) && (\r\n                  <div className=\"divide-y divide-gray-700\">\r\n                    {leagueMatches.map(match => (\r\n                      <MatchCard\r\n                        key={match.id}\r\n                        match={match}\r\n                        onClick={() => {}}\r\n                        onToggleFavorite={toggleFavorite}\r\n                        isFavorite={favoriteMatches.includes(match.id)}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n\r\n            {/* Diğer Ligler */}\r\n            {otherLeagues.map(([leagueName, leagueMatches]) => (\r\n              <div key={leagueName} className=\"bg-gray-800/50 rounded-lg overflow-hidden\">\r\n                <div \r\n                  className=\"bg-gray-800 px-4 py-2 flex items-center justify-between cursor-pointer hover:bg-gray-700\"\r\n                  onClick={() => toggleLeagueExpand(leagueName)}\r\n                >\r\n                  <h2 className=\"text-lg font-semibold text-white\">{leagueName}</h2>\r\n                  <span className=\"text-gray-400\">\r\n                    {expandedLeagues.includes(leagueName) ? '▼' : '▶'}\r\n                  </span>\r\n                </div>\r\n                {expandedLeagues.includes(leagueName) && (\r\n                  <div className=\"divide-y divide-gray-700\">\r\n                    {leagueMatches.map(match => (\r\n                      <MatchCard\r\n                        key={match.id}\r\n                        match={match}\r\n                        onClick={() => {}}\r\n                        onToggleFavorite={toggleFavorite}\r\n                        isFavorite={favoriteMatches.includes(match.id)}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DailyMatches; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}