{"ast":null,"code":"var _jsxFileName = \"E:\\\\masaustu\\\\golazo\\\\src\\\\components\\\\AdminRoute.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { auth } from '../firebase';\nimport { isAdmin } from '../utils/adminCheck';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminRoute = ({\n  children\n}) => {\n  _s();\n  const [user, loading] = useAuthState(auth);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen bg-gray-900 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-white\",\n        children: \"Y\\xFCkleniyor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n  if (!user || !isAdmin(user)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n_s(AdminRoute, \"liTJYMwBp9eGkQxP/R7n+ki5K8M=\", false, function () {\n  return [useAuthState];\n});\n_c = AdminRoute;\nexport default AdminRoute;\nvar _c;\n$RefreshReg$(_c, \"AdminRoute\");","map":{"version":3,"names":["React","Navigate","useAuthState","auth","isAdmin","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminRoute","children","_s","user","loading","className","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["E:/masaustu/golazo/src/components/AdminRoute.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../firebase';\r\nimport { isAdmin } from '../utils/adminCheck';\r\n\r\ninterface AdminRouteProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nconst AdminRoute: React.FC<AdminRouteProps> = ({ children }) => {\r\n  const [user, loading] = useAuthState(auth);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-900 flex items-center justify-center\">\r\n        <div className=\"text-white\">YÃ¼kleniyor...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!user || !isAdmin(user)) {\r\n    return <Navigate to=\"/\" replace />;\r\n  }\r\n\r\n  return <>{children}</>;\r\n};\r\n\r\nexport default AdminRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,YAAY,QAAQ,2BAA2B;AACxD,SAASC,IAAI,QAAQ,aAAa;AAClC,SAASC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAM9C,MAAMC,UAAqC,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,YAAY,CAACC,IAAI,CAAC;EAE1C,IAAIU,OAAO,EAAE;IACX,oBACEP,OAAA;MAAKQ,SAAS,EAAC,2DAA2D;MAAAJ,QAAA,eACxEJ,OAAA;QAAKQ,SAAS,EAAC,YAAY;QAAAJ,QAAA,EAAC;MAAa;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAEV;EAEA,IAAI,CAACN,IAAI,IAAI,CAACR,OAAO,CAACQ,IAAI,CAAC,EAAE;IAC3B,oBAAON,OAAA,CAACL,QAAQ;MAACkB,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpC;EAEA,oBAAOZ,OAAA,CAAAE,SAAA;IAAAE,QAAA,EAAGA;EAAQ,gBAAG,CAAC;AACxB,CAAC;AAACC,EAAA,CAhBIF,UAAqC;EAAA,QACjBP,YAAY;AAAA;AAAAmB,EAAA,GADhCZ,UAAqC;AAkB3C,eAAeA,UAAU;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}