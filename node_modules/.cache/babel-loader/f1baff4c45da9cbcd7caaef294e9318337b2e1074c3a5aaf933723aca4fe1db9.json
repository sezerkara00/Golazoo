{"ast":null,"code":"var _jsxFileName = \"E:\\\\masaustu\\\\golazo\\\\src\\\\contexts\\\\AuthContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { api } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext(undefined);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Sayfa yüklendiğinde oturum durumunu kontrol et\n    const checkAuth = async () => {\n      try {\n        const token = localStorage.getItem('token');\n        if (token) {\n          const response = await api.get('/auth/me');\n          setUser(response.data);\n        }\n      } catch (error) {\n        localStorage.removeItem('token');\n        setUser(null);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data.user);\n    } catch (error) {\n      throw new Error('Giriş başarısız');\n    }\n  };\n  const logout = async () => {\n    try {\n      await api.post('/auth/logout');\n    } finally {\n      localStorage.removeItem('token');\n      setUser(null);\n    }\n  };\n  const register = async (name, email, password) => {\n    try {\n      const response = await api.post('/auth/register', {\n        name,\n        email,\n        password\n      });\n      localStorage.setItem('token', response.data.token);\n      setUser(response.data.user);\n    } catch (error) {\n      throw new Error('Kayıt başarısız');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","undefined","AuthProvider","children","_s","user","setUser","loading","setLoading","checkAuth","token","localStorage","getItem","response","get","data","error","removeItem","login","email","password","post","setItem","Error","logout","register","name","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["E:/masaustu/golazo/src/contexts/AuthContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { api } from '../services/api';\r\n\r\ninterface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n  avatar?: string;\r\n}\r\n\r\ninterface AuthContextType {\r\n  user: User | null;\r\n  loading: boolean;\r\n  login: (email: string, password: string) => Promise<void>;\r\n  logout: () => Promise<void>;\r\n  register: (name: string, email: string, password: string) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Sayfa yüklendiğinde oturum durumunu kontrol et\r\n    const checkAuth = async () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        if (token) {\r\n          const response = await api.get('/auth/me');\r\n          setUser(response.data);\r\n        }\r\n      } catch (error) {\r\n        localStorage.removeItem('token');\r\n        setUser(null);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    checkAuth();\r\n  }, []);\r\n\r\n  const login = async (email: string, password: string) => {\r\n    try {\r\n      const response = await api.post('/auth/login', { email, password });\r\n      localStorage.setItem('token', response.data.token);\r\n      setUser(response.data.user);\r\n    } catch (error) {\r\n      throw new Error('Giriş başarısız');\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      await api.post('/auth/logout');\r\n    } finally {\r\n      localStorage.removeItem('token');\r\n      setUser(null);\r\n    }\r\n  };\r\n\r\n  const register = async (name: string, email: string, password: string) => {\r\n    try {\r\n      const response = await api.post('/auth/register', { name, email, password });\r\n      localStorage.setItem('token', response.data.token);\r\n      setUser(response.data.user);\r\n    } catch (error) {\r\n      throw new Error('Kayıt başarısız');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, loading, login, logout, register }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (context === undefined) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}